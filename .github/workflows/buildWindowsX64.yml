name: Windows x64 Build

on:
  workflow_dispatch:
  push:
    branches: ["**"]     # Run on push to any branch
  pull_request:
    branches: ["**"]     # Run on PR to any branch

jobs:
  run-make-install:
    runs-on: windows-2025  # Specify windows version 2025
    steps:

      # Install Inno Setup
      - name: Install Inno Setup
        run: choco install innosetup
        
      # Rust
      - name: Set up Rust
        id: set-up-rust
        uses: moonrepo/setup-rust@v1

      # Set APP_VERSION from app_config.env
      - name: Extract APP_VERSION from app_config.env
        id: get_app_version
        run: |
          $envFile = ".\app_config.env"
          $versionLine = Get-Content $envFile | Where-Object { $_ -match '^APP_VERSION\s*=' }
          $version = $versionLine -replace ".*=(.*)", '$1'
          $version = $version.Trim("'").Trim('"')   # Remove quotes if present
          echo "APP_VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Append

      # Set APP_NAME from app_config.env
      - name: Extract APP_NAME from app_config.env
        id: get_app_name
        run: |
          $envFile = ".\app_config.env"
          $versionLine = Get-Content $envFile | Where-Object { $_ -match '^APP_NAME\s*=' }
          $version = $versionLine -replace ".*=(.*)", '$1'
          $version = $version.Trim("'").Trim('"')   # Remove quotes if present
          echo "APP_NAME=$version" | Out-File -FilePath $env:GITHUB_ENV -Append

      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install the repository
      - name: Run install_this_repo.bat
        working-directory: .\windows\install
        run: .\install_this_repo.bat

      # Setup
      - name: Run app_setup.bat
        working-directory: .\windows\scripts
        run: .\app_setup.bat

      # Clone resources and clients
      - name: Run clone.bat
        working-directory: .\windows\scripts
        run: .\clone.bat

      # Install and build clients
      - name: Run build_clients.bat
        working-directory: .\windows\scripts
        run: .\build_clients.bat

      # Build without clean
      - name: Run build_server_wo_clean.bat
        working-directory: .\windows\install
        run: .\build_server_wo_clean.bat

      # Bundle zip
      - name: Run bundle_zip.ps1
        working-directory: .\windows\install
        run: .\bundle_zip.ps1

      # Get names for zip artifact
      - name: get names for zip artifact
        run: |
          echo "Zip for terminal name:"
          $ZIP_NAME = Get-ChildItem -Path ".\releases\windows\*.zip" -Name
          echo "ZIP_NAME=$ZIP_NAME" >> $env:GITHUB_ENV

      # Upload zip for terminal artifact
      - name: Upload zip for terminal artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ZIP_NAME }}
          path: .\releases\windows\${{ env.ZIP_NAME }}

      # Build exe
      - name: Run bundle_exe.ps1
        working-directory: .\windows\install
        run: .\bundle_exe.ps1

      # Get workspace location and repo name
      - name: show workspace and repo name
        run: |
          echo "github.event.repository.name: ${{ github.event.repository.name }}"
          echo "github.workspace: ${{ github.workspace }}"

      - name: show file contents
        run: |
          dir "${{ github.workspace }}\windows\install\"
          dir "${{ github.workspace }}\releases\windows"
          dir "${{ github.workspace }}\windows\"
          dir "${{ github.workspace }}\"
          dir "${{ github.workspace }}\windows\build"
          dir "${{ github.workspace }}\windows\buildResources"
          echo ".\windows\install\makeInstall.iss"
          type .\windows\install\makeInstall.iss
          echo ".\windows\build\pankosmia-desktop-app-template.bat"
          type .\windows\build\pankosmia-desktop-app-template.bat
          echo ".\windows\buildResources\appLauncher.bat"
          type .\windows\buildResources\appLauncher.bat

      # Build the Inno Setup Installer
      - name: Compile .ISS to .EXE Installer
        working-directory: .\windows\install
        run: |
          echo "APP_NAME: ${{ env.APP_NAME }}"
          echo "APP_VERSION: ${{ env.APP_VERSION }}"
          "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" makeInstall.iss /O".\releases\windows"

      # Get names for exe artifact
      - name: get names for exe artifact
        run: |
          echo "Exe for terminal name:"
          $EXE_NAME = Get-ChildItem -Path ".\releases\windows\*.exe" -Name
          echo "EXE_NAME=$EXE_NAME" >> $env:GITHUB_ENV

      # Upload exe artifact
      - name: Upload exe artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.EXE_NAME }}
          path: .\releases\windows\${{ env.EXE_NAME }}
